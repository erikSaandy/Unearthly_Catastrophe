@using Sandbox;
@inherits PanelComponent
@namespace Facepunch.Arena

@if ( Player.IsValid() && Player.LifeState == LifeState.Alive
	&& Network.OwnerConnection is Connection owner
	&& owner != Connection.Local )
{
	<root>

		<div class="card @(Visible ? "visible" : "")">
			<div class="avatar @(Visible ? "visible" : "")" style="background-image: url( 'avatar:@owner.SteamId' )"></div>
			<div class="name @(Visible ? "visible" : "")">@owner.DisplayName</div>
			
			@if ( IsVoicePlaying )
			{
				<div class="voice @(Visible ? "visible" : "")">volume_up</div>
			}
		</div>
	</root>
}

@code
{
	private Player Player { get; set; }
	private Voice VoiceComponent { get; set; }

	public bool Visible  = false;
	private bool GetVisible()
	{

		if(base.Scene.Camera == null) { return false; }
		if(Player == null) { return false; }

		float dst = Vector3.DistanceBetweenSquared(base.Scene.Camera.Transform.Position, Player.Transform.Position);

		if (dst < 50000)
		{
			return true;
		}

		return false;

	}

	protected override void OnEnabled()
	{
		base.OnEnabled();
		VoiceComponent = GameObject.Root.Components.GetInDescendantsOrSelf<Voice>();
		Player = GameObject.Root.Components.GetInDescendantsOrSelf<Player>();
	}

	protected override void OnUpdate()
	{
		Visible = GetVisible();
	}

	public bool IsVoicePlaying
	{
		get
		{
			if ( !VoiceComponent.IsValid() )
				return false;
			
			return VoiceComponent.LastPlayed < 0.5f;
		}
	}

	protected override int BuildHash() => System.HashCode.Combine(Network.OwnerConnection, IsVoicePlaying, Player?.LifeState, Visible);
}
