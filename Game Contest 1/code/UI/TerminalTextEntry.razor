@using Sandbox;
@using Sandbox.UI;
@attribute [StyleSheet]
@inherits Panel

@code
{

	public TerminalComponent Owner { get; set; }

	public string InputText { get; set; }

	public Action<string> OnKeyPressed { get; set; }

	protected override int BuildHash() => System.HashCode.Combine(Owner?.TextLines, Owner?.TextLines.Count, Owner?.ShowCursor);

	public override bool AcceptsImeInput => true;

	public TerminalTextEntry()
	{
		AcceptsFocus = true;
	}

	public void SendInput()
	{
		Log.Info(InputText);
	}

	public override void OnButtonTyped(ButtonEvent e)
	{
		e.StopPropagation = true;

		var button = e.Button;

		// TODO: Doesn't work for some fucking reason
		if (e.Button == "escape")
		{
			OnKeyPressed?.Invoke(button);
			Owner.Exit();
			return;
		}

		// Delete text	
		if (button == "backspace")
		{
			if(InputText == string.Empty) { return; }

			InputText = InputText.Remove(InputText.Length-1);
			OnKeyPressed?.Invoke(button);
			return;
		}

		if(button == "space") 
		{
			KeyPressed(' ');
			OnKeyPressed?.Invoke(button);
			return;
		}

		if (button == "enter")
		{
			OnKeyPressed?.Invoke(button);
			return;
		}

		if (button.Length > 1) { return; }

		if (e.HasShift)
		{
			button = button.ToUpper();
		}

		OnKeyPressed?.Invoke(button);
		KeyPressed(button.ToCharArray()[0]);

	}

	public override void OnButtonEvent(ButtonEvent e)
	{
		// dont' send to parent
		e.StopPropagation = true;
	}


	private void KeyPressed(char k) {
		InputText += k;
	}


}
